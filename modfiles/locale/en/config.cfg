[mod-name]
factoryplanner=Factory Planner

[mod-description]
factoryplanner=This mod allows you to plan your production in advance, specifying the recipes and machines that make up each assembly line. It provides powerful features that are fast and intuitive to use, so you can focus on actually building your factory.


[controls]
fp_toggle_main_dialog=Open/Close
fp_toggle_pause=Toggle Pause
fp_floor_up=Move up a floor
fp_refresh_production=Refresh production
fp_cycle_production_views=Cycle production view
fp_confirm_dialog=Confirm dialog
fp_focus_searchfield=Focus searchfield

[controls-description]
fp_toggle_main_dialog=Toggles the main interface
fp_toggle_pause=Toggles pausing the game when Factory Planner's interface is open
fp_floor_up=Changes to the parent of the current floor
fp_refresh_production=Refreshes the current production table
fp_cycle_production_views=Cycles between the different views of the production table
fp_confirm_dialog=Confirms any modal dialog, even when no textfield is in focus
fp_focus_searchfield=Focuses the cursor on the searchfield of the product picker, if possible


[mod-setting-name]
fp_display_gui_button=Display open/close-button [img=info]
fp_subfactory_items_per_row=Interface-width [img=info]
fp_floor_recipes_at_once=Interface-height [img=info]
fp_alt_action=Alt action [img=info]
fp_default_timescale=Default timescale [img=info]
fp_view_belts_or_lanes=View type [img=info]
fp_indicate_rounding=Machine rounding precision [img=info]

[mod-setting-description]
fp_display_gui_button=Shows the button on the top left of the screen. It opens and closes the main interface.
fp_subfactory_items_per_row=Set the main interface width by choosing how many top-level items (ingredients / products / byproducts) are shown per row.
fp_floor_recipes_at_once=Set the main interface height by choosing how many recipe lines you want to see without scrolling.
fp_alt_action=Select an action when alt-clicking any item- or recipe-button. Currently works with FNEI, WIIRUF and Recipe Book. The mod has to be installed and enabled before it shows up in this list.
fp_default_timescale=Choose the timescale that any new subfactory should be created with.
fp_view_belts_or_lanes=Indicate whether you think of item throughput as lanes or as full belts.
fp_indicate_rounding=Sets the precision with which machine numbers are rounded. For example, setting this to 0.05 means a machine number of 1.96 will show as a perfect 2 machines, while 1.94 will show as being rounded up. This also works in the opposite direction, meaning 2.04 shows as a perfect 2 machines. Setting this to 0 disables the feature.

[string-mod-setting]
fp_alt_action-none=None
fp_alt_action-fnei=Open in FNEI
fp_alt_action-wiiruf=Open in WIIRUF
fp_alt_action-recipebook=Open in Recipe Book
fp_default_timescale-one_second=1 Second
fp_default_timescale-one_minute=1 Minute
fp_default_timescale-one_hour=1 Hour
fp_view_belts_or_lanes-belts=Belts
fp_view_belts_or_lanes-lanes=Lanes


[shortcut-name]
fp_open_interface=Open Factory Planner


[item-name]
fp_beacon_selector=Beacon Selector


[command-help]
fp_reset_prototypes=Reconstructs the various prototypes from the base game data. Shouldn't ever be needed.


[fp]
# General
amount=Amount
item=item
items=items
citems=Items
fluid=fluid
lfuel=fuel
fuel=Fuel
belt=belt
belts=belts
cbelts=Belts
lane=lane
lanes=lanes
clanes=Lanes
machine=machine
cmachine=Machine
machines=machines
cmachines=Machines
module=module
cmodule=Module
modules=modules
cmodules=Modules
beacon=beacon
cbeacon=Beacon
beacons=beacons
cbeacons=Beacons
energy=Energy
pollution=pollution
cpollution=Pollution
lrecipe=recipe
recipe=Recipe
lingredient=ingredient
ingredient=Ingredient
ingredients=Ingredients
lproduct=product
product=Product
products=Products
lbyproduct=byproduct
byproduct=Byproduct
byproducts=Byproducts
subfactory=subfactory
csubfactory=Subfactory
subfactories=subfactories
csubfactories=Subfactories
floor=Floor

# Misc
pause_on_interface=Toggle to automatically pause the game in the background when the main interface is open (Singleplayer only)\n- Press __CONTROL__fp_toggle_pause__ to toggle pause -
close_interface=Close this interface\n- Press __CONTROL__fp_toggle_main_dialog__ to close dialog -
production_info=Add a product and left-click it to add a recipe
sprite_missing=The current icon is from a mod that is not active
line_percentage_tooltip=This percentage determines how much of the demand for the products that this recipe produces should actually be fulfilled by this recipe. The calculation only updates after you confirm your changes by pressing [font=default-semibold][color=#84CDEC]Enter[/color][/font].
subfloor_attached=Subfloor attached
subfloor_machine_count=in total used on this subfloor
indication= (__1__)
priority=Priority
raw_ore=Raw Ore
comments=Comments
count=Count
timescale=Timescale
crafting_time=Crafting Time
satisfied=satisfied
selected=selected
module_consumption=Energy Consumption
module_speed=Speed
module_productivity=Productivity
module_pollution=Pollution
add_a_product=Add a product
add_a_module=Add a module
add_beacons=Add beacons
beacon_count=Beacon count
none=None
on=On
off=Off
left=left
right=right
up=up
down=down
upgraded=upgraded
downgraded=downgraded
increased=increased
decreased=decreased
produce=produce
consume=consume
alt_action_none=None
alt_action_fnei=Open in FNEI
alt_action_wiiruf=Open in WIIRUF
alt_action_recipebook=Open in Recipe Book

# Subfactory dialog
subfactory_instruction_1=Specify a name, icon, or both
subfactory_instruction_2=No more than 64 characters
name=Name
icon=Icon

# Utility dialog
utilities=Utilities
type_components=Components__1____2__
type_components_tt=Shows the machines and modules needed to construct the current subfactory/floor. It can only incorporate beacons and beacon-modules when their ’Beacon Total’ is set. Rounds up the numbers for every line individually.
component_amounts_tt=__1__ needed / [font=default-bold]__2__[/font] in inventory
pl_machine=[font=default-bold]__1__[/font] __plural_for_parameter_1_{1=machine|rest=machines}__
pl_module=[font=default-bold]__1__[/font] __plural_for_parameter_1_{1=module|rest=modules}__
no_components=No __1__ needed
type_notes=Notes__1____2__

# Product dialog
add_product=Add Product
edit_product=Edit Product
amount_by=Amount by __1__
product_instruction_1=Specify a product and an amount
search=Search
error_no_item_found=There are no items that match your search term.
error_no_recipe_found=No recipes match your filter conditions.

# Recipe dialog
add_recipe=Add Recipe
unresearched_recipes=Unresearched recipes
hidden_recipes=Hidden recipes
show=Show

# Generic dialogs
choose=Choose
set=Set
option_text=__1__ '__2__':
# Machine chooser
chooser_machine=Choose a machine for the recipe
# Fuel chooser
chooser_fuel_line=Choose a fuel type for the machine
# Machine options
machine_limit_title=machine limit
machine_limit_text=Set a limit for the recipe
machine_limit_option=Machine limit
machine_hard_limit_option=Hard limit
machine_limit_option_tt=Limits the number of machines this line will use. The actual amount might be lower if fewer machines are needed.
machine_hard_limit_option_tt=Forces the number of machines to be the exact amount specified above, even if this leads to overproduction. Has no effect if the limit above is not set.
machine_limit_hard=Hard limit set [__1__]
machine_limit_enforced=Limit enforced [__1__]
machine_limit_set=Limit set [__1__]
# Item options
option_item_title=__1__ amount
option_item_text=Set a specific amount for the __1__
option_item_amount_label=Amount
option_item_amount_label_tt=Specify the exact amount of this __1__ that you want this recipe to __2__. This will adjust the percentage of this line to make that happen.

# Modules dialog
max=Max
select=Select
total=Total
capped=capped
select_module=Select Module
select_beacon=Select Beacon
add_module=Add Module
edit_module=Edit Module
add_beacon=Add Beacon
edit_beacon=Edit Beacon
no_compatible_module=No compatible module found
module_instruction_1=Specify a module and an amount
module_instruction_2=Module amount must be __1__  __2__
module_instruction_2_addendum=between 1 and
beacon_instruction_1=Specify both a beacon and module
max_modules=Set the amount of modules so they fill up all empty slots on the machine.
current_module=This is the module you are currently editing.
current_beacon=This is the beacon you are currently editing.
existing_module=There’s __1__ of this type of module in this machine.
beacon_total=Beacon Total
beacon_total_tt=Enter the total number of beacons this setup actually uses. This data is incorporated into the energy calculations.
beacon_select=Use a selection tool to select your already-built beacons manually.

# Porter dialog
import=Import
export=Export

# Actionbar
new=New
edit=Edit
archive=Archive
unarchive=Unarchive
delete=Delete
delete_confirm=Delete?
duplicate=Duplicate
open_archive=Open Archive
close_archive=Close Archive
action_new_subfactory=Allows you to create a new subfactory
action_edit_subfactory=Allows you to edit the name and icon of the selected subfactory
action_archive_subfactory=Moves the selected subfactory to archive. You can open it using the button to the right →
action_unarchive_subfactory=Moves the selected subfactory back to the main list
action_delete_subfactory=Irreversibly removes the selected subfactory
action_duplicate_subfactory=Duplicates the selected subfactory
action_import_subfactory=
action_export_subfactory=
toggle_archive=Opens your subfactory archive. Archived subfactories can’t be edited until you unarchive them.
archive_empty=- The archive is currently empty -
archive_filled=The archive currently contains

# Errorbar
error_bar_1=This subfactory contains items/recipes/machines/modules/beacons from one or more
error_bar_2=mods that are currently not loaded.  Sync your mods to this save or
error_bar_repair=repair it
error_bar_repair_tt=This will try to replace the missing entities with suitable replacements. Everything that can’t be fixed will be deleted. This process can’t be undone.

# Info pane
info=Info
utility=Utility
mining_prod=Mining productivity
view_utilities=View Utilities
notes=Notes
override=Override
timescales_tt=Timescales set how quickly items are produced. For example, selecting ’1m’ and adding a product of 400 green circuits means you want to produce 400 circuits per minute.
mining_prod_tt=The current mining productivity bonus. By default, it tracks your research progress, but you can override the percentage manually. To revert it to automated tracking, clear the textfield and confirm.

# Titlebar
production=Production
level=Level
go_up=Go up
to_the_top=To the top
item_amount_toggle=Floor Total
clear=Clear
cycle_production_views=- Press __CONTROL__fp_cycle_production_views__ to cycle views -
item_amount_toggle_tt=When this toggle is active, the item amounts displayed above are the total ingredients/products/byproducts and energy consumption of this particular subfloor, as opposed to those of the whole subfactory.
refresh_production=Refresh the production table below\n- Press __CONTROL__fp_refresh_production__ to refresh -
items_per_timescale=Sets the number on item buttons to how many will be produced/consumed per
belts_or_lanes=Sets the number on item buttons to how many __1__ of your preferred belt type will be needed to transport them.
items_per_second_per_machine=Sets the number on item buttons to how many of them per second a single machine will produce/consume. This helps to estimate how many inserters you’ll need.
clear_recipe_comments=Clear all comments on the current floor.

# Modal dialogs
submit=Submit
cancel=Cancel
close=Close
open_main_dialog=- Press __CONTROL__fp_toggle_main_dialog__ to open -
confirm_dialog=- Press __CONTROL__fp_confirm_dialog__ to confirm -
close_dialog=- Press __CONTROL__toggle-menu__ to close -
cancel_dialog=- Press __CONTROL__toggle-menu__ to cancel -

# Messages
error_no_relevant_recipe=No existing recipe can craft this product
error_no_enabled_recipe=No enabled recipe can craft this product (enable in preferences →)
error_no_compatible_machine=No existing machine can craft this product
error_product_wrong_floor=Product recipes can only be added to the top-level subfactory floor
error_byproduct_wrong_floor=Byproduct recipes can only be added to the top floor or where produced
error_editing_archived_subfactory=Archived subfactories can’t be edited
error_no_prioritizing_single_product=Recipes with a single relevant product can’t be prioritized
error_list_item_cant_be_shifted=This __1__ can’t be moved __2__
error_object_cant_be_up_downgraded=This __1__ can’t be __2__
error_object_amount_cant_be_in_decreased=This __1__’s amount can’t be __2__
warning_disabled_recipe=This recipe is not researched yet, so you can’t produce it currently
warning_module_not_compatible=Your preferred __1__ is not compatible with this machine
hint_tutorial=If you are new to Factory Planner, consider taking a look the the tutorial ⟶

# Units
prefix_kilo=k
prefix_mega=M
prefix_giga=G
prefix_tera=T
prefix_peta=P
prefix_exa=E
prefix_zetta=Z
prefix_yotta=Y
unit_watt=W
unit_joule=J
unit_pollution=P
unit_celsius=°C
unit_second=s
unit_minute=m
unit_hour=h
second=second
minute=minute
hour=hour

# Preferences
energy_consumption=Energy consumption
effectivity=Effectivity
module_slots=Module slots
fuel_value=Fuel value
emissions_multiplier=Emissions multiplier
throughput=Throughput
crafting_speed=Crafting speed
preferences=Preferences
preferences_info=These preferences contain settings that you adjust often over the course of a game.\nFor general settings, go to Main Menu→Settings→Mod Settings→Factory Planner.
general_preferences_ignore_barreling_recipes=Ignore barreling and stacking recipes
general_preferences_ignore_recycling_recipes=Ignore recycling recipes
general_preferences_ingredient_satisfaction=Ingredient satisfaction
general_preferences_round_button_numbers=Round button numbers
general_preferences_ignore_barreling_recipes_tt=Allows you to ignore (un)barreling and (un)stacking when looking for a recipe. (Only for compatible mods)
general_preferences_ignore_recycling_recipes_tt=Allows you to ignore recipes that recycle an existing item. (Only for compatible mods)
general_preferences_ingredient_satisfaction_tt=Shows whether the ingredient-demands of a recipe are satisfied by the recipes below them. Might have a small performance impact.
general_preferences_round_button_numbers_tt=Rounds the numbers on machine- and belts/lanes-buttons. This preference is ignored for machine-buttons if the ’Machine rounding precision’ mod-setting is active.
production_preferences_pollution=Pollution
production_preferences_pollution_tt=Adds a column displaying the pollution produced by this recipe.
production_preferences_line_comments=Recipe comments
production_preferences_line_comments_tt=Adds a column with a textfield so you can take notes on individual recipes.
preferences_title_general=General preferences
preferences_title_production=Production table columns
preferences_title_mb_defaults=Module defaults
preferences_title_belts=Select your preferred belt
preferences_title_beacons=Select the preferred beacon for your production lines
preferences_title_fuels=Select the preferred fuel type for your burner machines
preferences_title_machines=Select the preferred machine for each type of crafting
preferences_title_general_tt=Some general preferences that you might want to change regularly.
preferences_title_production_tt=This allows you to enable some additional columns in the production table.
preferences_title_mb_defaults_tt=Set the default modules that every new recipe line will be configured with by default, including the number of beacons per machine.
preferences_title_belts_tt=This allows you to select the kind of belt that is used when calculating the belts/lanes-demand or when specifying products by an amount of belts.
preferences_title_beacons_tt=This allows you to select the default beacon when adding one to a recipe line.
preferences_title_fuels_tt=This allows you to select the kind of fuel that will be used when calculating the energy needs of a burner-type machine.
preferences_title_machines_tt=This allows you to set a default machine for each type of crafting, so new assembly lines start with that machine selected. You can [font=default-semibold][color=#84CDEC]alt-click[/color][/font] a machine to set that machine on every other category that also has it.

# Tutorial
tutorial=Tutorial
interactive=Interactive
interface=Interface
usage=Usage
protips=Pro Tips
create_example=Create example subfactory
example_subfactory=Creates an example subfactory which you can use to explore the functionality of this mod.
example_subfactory_info=Can’t be created if any other mods are active.
tutorial_mode=Tutorial Mode
tutorial_mode_tt=Adds a list of every possible interaction to the tooltips of important buttons, so you can explore the offered functionality on your own.

# Tutorial text
interface_text=The interface is set up so similar actions share the same shortcuts. This prevents you from having to remember which shortcut will cause which action for everything you do. You’ll just have to internalize these basic interactions and can use them everywhere:
interface_controls=- Left-click: [font=default-bold]Select/Use[/font]\n- Right-click: [font=default-bold]Edit[/font]\n- Control-right-click: [font=default-bold]Delete[/font]\n- Shift-left-click: [font=default-bold]Move list item forward/upgrade[/font]\n- Control-left-click: [font=default-bold]Move list item backward/downgrade[/font]\n- Alt-click: [font=default-bold]__1__[/font]
usage_text=First, you will need to create a subfactory. This is the basic structure that contains some (mostly independent) part of your factory. Give it a name and/or an icon, and off you go. It will have some inputs (ingredients), some outputs (products and byproducts) and consume a certain amount of energy. You can also set the timescale you want to work with, or scribble down some notes.\n\nWhat you are interested in are the products, so you will need to add the ones you want to produce. To do that, simply click the ’+’-button, select the product you want and specify the amount that should be produced. It will have a red background, and, when hovering over it, you will see that there is currently 0 of it being produced.\n\nTo change that, you left-click on it. If there is only one recipe to produce this product, it will be added right away. Otherwise, you will have the choice of which recipe to use. Either way, a new recipe will show up on the top floor of your subfactory. You can change the machine being used or add some modules and beacons.\n\nNow to further break down the product you want to produce, you can left-click on the ingredients of an existing recipe. This will once again add a recipe, changing the ingredients needed for the whole subfactory. You can continue breaking down your product in this way until you arrive at only plates as ingredients for example, or drill even deeper and add your mining and smelting recipes too. Whatever is most convenient for you and your existing factory.\n\nFor items with a large amount of intermediate products, your collection of recipes can get quite messy quite quickly. To deal with this, you can have multiple floors with different recipes on each of them. To create a so-called subfloor, left-click on the recipe icon of the recipe you want to work out further. This gets you a subfloor (notice the level will be displayed as ’2’) in which you can add recipes just like before. The big difference being that you only need to worry about the ingredients of the recipe you left-clicked on.\n\nAnd those are the basics! There are some more advanced features that come in handy (check out the Pro Tips below), but this should get you started. Create the example subfactory (button at the top of this window) if you want to play around with a basic production line.

# Pro Tips
pro_hovering=Hovering over many buttons and labels will reveal some additional information, like the recipe or item’s full name, or a higher precision number, should you need it.
pro_list_ordering=Pretty much every list you see can be re-ordered by you. Just hold the shift- or control-key while left-clicking on an element. The order only really matters for the recipes on a production floor.
pro_up_down_grading=Try shift- or control-clicking on a machine, beacon or module. It will up- or downgrade them, if possible.
pro_preferences=In preferences, you can set the default machine to be used for each type of recipe. This allows you adjust them to your current tech level, allowing for quicker factory planning. The same goes for belts, fuels and beacons.
pro_interface_size=If the main window takes up too much or too little space on your screen, try changing the interface width- and height-settings. (Menu→Settings→Mod Settings→Factory Planner)
pro_recursive_subfloors=You can create a subfloor for a recipe that is already on a subfloor. This can be done as many times as you like, creating a deeply nested structure of subfloors.
pro_archive=The archive is a good way to store subfactories that aren’t in active use anymore, but you might want to refer back to at some point.
pro_settings=Some advanced features aren’t active by default. Instead, they hide in mod settings (Menu→Settings→Mod Settings→Factory Planner). Take a look, you’ll find things like interface size adjustment and some defaults to be set.
pro_shortcuts=You can configure several keyboard shortcuts to get around the interface faster. They can be found in ’Controls’ (Menu→Settings→Controls→Factory Planner).
pro_views=There are several different views that you can cycle through with __CONTROL__fp_cycle_production_views__. They allow for different perspectives on your factory, which makes building it easier, as they give you information on how many belts and inserters you will need.
pro_line_fuel=The kind of fuel that a recipe uses can be changed by left-clicking its button (blue background). By default, it will use the choice you make in preferences.
pro_machine_limits=You can set a limit on the amount of machines a recipe uses. Either set a ’soft’ limit that prevents it from going over the configured amount, or set a ’hard’ limit, which will force the recipe to use the configured amount of machines.
pro_priority_product=Every recipe with more than one relevant products can have a priority product. You set it by right-clicking on the product you want to be prioritized. This has the effect that the demands on that item are met exactly, irrespective of any other demand.

# Tutorial Mode
tut_mode=- Tutorial Mode -
tut_subfactory=Left-click: Select\nRight-click: Edit\nControl-right-click: Delete\nShift-left-click: Move right\nControl-left-click: Move left\nShift-alt-left-click: Move to the bottom\nControl-alt-left-click: Move to the top
tut_tl_ingredient=Shift-left-click: Move right\nControl-left-click: Move left
tut_tl_product=Left-click: Add recipe\nRight-click: Edit\nControl-right-click: Delete\nShift-left-click: Move right\nControl-left-click: Move left
tut_tl_byproduct=Shift-left-click: Move right\nControl-left-click: Move left
tut_recipe=Left-click: Open subfloor\nControl-right-click: Delete\nShift-left-click: Move down\nControl-left-click: Move up\nShift-alt-left-click: Move to the bottom\nControl-alt-left-click: Move to the top
tut_machine=Left-click: Change\nRight-click: Set limit\nShift-left-click: Upgrade\nControl-left-click: Downgrade\nAlt-click: Reset to default
tut_module=Left/Right-click: Edit\nControl-right-click: Delete\nShift-left-click: Upgrade tier\nControl-left-click: Downgrade tier\nShift-alt-left-click: Add module\nControl-alt-left-click: Remove module
tut_beacon_module=Left/Right-click: Edit\nControl-right-click: Delete\nShift-left-click: Upgrade tier\nControl-left-click: Downgrade tier\nShift-alt-left-click: Add module\nControl-alt-left-click: Remove module
tut_beacon_beacon=Left/Right-click: Edit\nControl-right-click: Delete\nShift-left-click: Upgrade tier\nControl-left-click: Downgrade tier\nShift-alt-left-click: Add beacon\nControl-alt-left-click: Remove beacon
tut_product=Left-click: Prioritize\nRight-click: Specify amount\nShift-left-click: Move right\nControl-left-click: Move left
tut_byproduct=Right-click: Specify amount\nShift-left-click: Move right\nControl-left-click: Move left
tut_ingredient=Left-click: Add recipe\nRight-click: Specify amount\nShift-left-click: Move right\nControl-left-click: Move left
tut_fuel=Left-click: Add recipe\nRight-click: Edit\nShift-left-click: Upgrade\nControl-left-click: Downgrade
tut_alt_action=\nAlt-click: __1__